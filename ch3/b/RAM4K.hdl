// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // First 3 bits selects RAM and determines load
    DMux8Way(in=load, sel=address[9..11],
             a=ra, b=rb, c=rc, d=rd, e=re, f=rf, g=rg, h=rh);
    // Rest of bits selects address
    RAM512(in=in, load=ra, address=address[0..8], out=ram0);
    RAM512(in=in, load=rb, address=address[0..8], out=ram1);
    RAM512(in=in, load=rc, address=address[0..8], out=ram2);
    RAM512(in=in, load=rd, address=address[0..8], out=ram3);
    RAM512(in=in, load=re, address=address[0..8], out=ram4);
    RAM512(in=in, load=rf, address=address[0..8], out=ram5);
    RAM512(in=in, load=rg, address=address[0..8], out=ram6);
    RAM512(in=in, load=rh, address=address[0..8], out=ram7);
    // Read
    Mux8Way16(a=ram0, b=ram1, c=ram2, d=ram3,
              e=ram4, f=ram5, g=ram6, h=ram7,
              sel=address[9..11], out=out);
}
